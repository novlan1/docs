import{_ as e,c as a,b as c,ag as l}from"./chunks/framework.CMjv3OHl.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"work/30.和平赛事横版迁移.md","filePath":"work/30.和平赛事横版迁移.md","lastUpdated":1756087650000}'),i={name:"work/30.和平赛事横版迁移.md"};function t(d,o,p,r,s,n){return c(),a("div",null,o[0]||(o[0]=[l('<p>2024.04.30</p><h2 id="_1-背景" tabindex="-1">1. 背景 <a class="header-anchor" href="#_1-背景" aria-label="Permalink to &quot;1. 背景&quot;">​</a></h2><p>和平横版之前是在 hp-match/dzs-match2 中，为了方便组件和逻辑复用，需要尽早迁移到 dzs-match 这个主工程中，避免维护两套。</p><p>目标架构：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/4/own_mike_63a4fb022e85254fb0.png" width="500"><h2 id="_2-迁移方法" tabindex="-1">2. 迁移方法 <a class="header-anchor" href="#_2-迁移方法" aria-label="Permalink to &quot;2. 迁移方法&quot;">​</a></h2><p>采用脚本迁移。好处是：</p><ol><li>工作量小</li><li>减少出错</li></ol><p>脚本迁移策略：</p><ol><li>对于公共目录，如 <code>src/local-component</code>, <code>src/local-logic</code>，先查找之前是否存在，如不存在则直接复制，如存在但文件内容不相同，则新建对应的<code>-gp-hor</code>文件夹，进行复制，如存在且该目录下所有文件内容相同，则略过</li><li>新建 <code>gp-hor</code> 子工程，对之前的子工程进行拷贝</li><li>记录下所有路径变化的文件，包括 <code>x-gp-hor</code> 的公共组件、逻辑，也包括 <code>gp-hor</code> 子工程下的文件，生成新旧文件映射</li><li>对复制的所有文件的引入路径，根据映射关系进行替换</li></ol><p>迁移后的工作量</p><ol><li>新建 <code>pages.json</code>、<code>manifest.json</code>，uni-app 项目没有这两文件跑不起来</li><li><code>pages.json</code> 只需要入口，其他页面路由还是从 <code>router.js</code> 中传给 <code>uni-simple-router</code></li><li><code>babel.config.js</code> 中支持 <code>vant</code> 的按需引入</li><li>其他适配，比如 <code>input</code> 样式</li></ol><p>工程内的适配工作较小，目前发现：</p><ol><li>之前的做的乱七八糟的 ts 组件，各种 this as any，在编译期报错，需改回 js</li><li>input、textarea 等元素被 uni-app 包装重写，需要样式更新</li><li>样式穿透由 &gt;&gt;&gt; 改成 ::v-deep</li></ol><h2 id="_3-后续规划" tabindex="-1">3. 后续规划 <a class="header-anchor" href="#_3-后续规划" aria-label="Permalink to &quot;3. 后续规划&quot;">​</a></h2><p>当前阶段只是完成迁移，仍有一部分重复的代码，后面跟随需求重构。</p><p>后续，横竖版公用的逻辑、组件分别放到 <code>local-logic</code>、<code>local-component</code>中，核心组件、逻辑下沉到 <code>press-plus</code> 中。</p>',17)]))}const m=e(i,[["render",t]]);export{h as __pageData,m as default};

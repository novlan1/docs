import{_ as i,c as t,b as e,ag as a}from"./chunks/framework.CMjv3OHl.js";const k=JSON.parse('{"title":"Vite 项目基础配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/project-config-vite.md","filePath":"zh/project-config-vite.md","lastUpdated":1754058176000}'),d={name:"zh/project-config-vite.md"};function n(l,s,p,o,h,r){return e(),t("div",null,s[0]||(s[0]=[a(`<h1 id="vite-项目基础配置" tabindex="-1">Vite 项目基础配置 <a class="header-anchor" href="#vite-项目基础配置" aria-label="Permalink to &quot;Vite 项目基础配置&quot;">​</a></h1><p align="center"><img src="https://img.shields.io/npm/dw/@plugin-light/project-config-vite"><img src="https://img.shields.io/npm/unpacked-size/@plugin-light/project-config-vite"><img src="https://img.shields.io/npm/v/@plugin-light/project-config-vite"><img src="https://img.shields.io/npm/l/@plugin-light/project-config-vite"><img src="https://img.shields.io/github/last-commit/novlan1/plugin-light"><img src="https://img.shields.io/github/created-at/novlan1/plugin-light"></p><p>封装 <code>vite.config.ts</code> 的基本配置，开箱即用。</p><h2 id="_1-如何使用" tabindex="-1">1. 如何使用 <a class="header-anchor" href="#_1-如何使用" aria-label="Permalink to &quot;1. 如何使用&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @plugin-light/project-config-vite</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>在 <code>vite.config.ts</code> 中添加如下设置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getViteBaseConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@plugin-light/project-config-vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getViteBaseConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="_2-参数" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h2><p><a href="https://github.com/novlan1/plugin-light/blob/master/packages/project-config-vite/src/types.ts" target="_blank" rel="noreferrer">完整类型定义</a>。</p><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>mode</td><td><code>string</code></td><td>模式，对应 Vite 中 <code>defineConfig</code> 的 <code>mode</code> 参数</td><td>-</td></tr><tr><td>serverPort</td><td><code>number</code></td><td>本地开发端口（不传会取 <code>process.env.VUE_APP_PORT</code>，或 <code>443</code>）</td><td>-</td></tr><tr><td>serverHttps</td><td><code>Server</code></td><td>本地开发是否是 <code>https</code></td><td>-</td></tr><tr><td>serverHost</td><td><code>string</code> | <code>boolean</code></td><td>传给 <code>server.host</code>（参考 <a href="https://cn.vitejs.dev/config/server-options.html#server-host" target="_blank" rel="noreferrer">Vite 文档</a>）</td><td>-</td></tr><tr><td>optimizeDepsIncludes</td><td><code>Array&lt;string&gt;</code></td><td>对应 <code>optimizeDeps.include</code></td><td>-</td></tr><tr><td>optimizeDepsExcludes</td><td><code>Array&lt;string&gt;</code></td><td>对应 <code>optimizeDeps.exclude</code></td><td>-</td></tr><tr><td>addCodeAtEndOptions</td><td><code>IAddCodeAtEndOptions</code> | <code>boolean</code></td><td><code>add-code-at-end</code> 插件参数</td><td>-</td></tr><tr><td>pressUiAlias</td><td><code>string</code></td><td><code>press-ui</code> 本地的 <code>alias</code> 配置</td><td><code>src/library/press-ui</code></td></tr><tr><td>pressPlusAlias</td><td><code>string</code></td><td><code>press-plus</code> 本地的 <code>alias</code> 配置</td><td><code>src/library/press-plus</code></td></tr><tr><td>aliasForLibraryOptions</td><td><code>IAliasForLibraryOptions</code></td><td><code>alias-for-library</code> 插件参数</td><td>-</td></tr><tr><td>pmdAliasMap</td><td><code>Record&lt;string, string&gt;</code></td><td><code>pmd-tools</code> 之类的别名映射</td><td>-</td></tr><tr><td>customElements</td><td><code>Array&lt;string&gt;</code></td><td>自定义元素配置</td><td>-</td></tr><tr><td>useCdn</td><td><code>boolean</code></td><td>三方库是否使用 <code>cdn</code> 链接（比如 <code>vue</code>，<code>vue-router</code>）</td><td><code>false</code></td></tr><tr><td>useElementPlusCDN</td><td><code>boolean</code></td><td>是否使用 <code>element-plus</code> 的 <code>cdn</code></td><td><code>false</code></td></tr><tr><td>mkcertOptions</td><td><code>boolean</code> | <code>MkcertPluginOptions</code></td><td><code>vite-plugin-mkcert</code> 参数</td><td>-</td></tr><tr><td>prePlugins</td><td><code>Array&lt;Plugin&gt;</code></td><td>前置插件</td><td>-</td></tr><tr><td>postPlugins</td><td><code>Array&lt;Plugin&gt;</code></td><td>后置插件</td><td>-</td></tr><tr><td>autoImportVant</td><td><code>boolean</code> | <code>VantResolverOptions</code></td><td>是否自动导入 <code>vant</code></td><td><code>true</code></td></tr><tr><td>autoImportElementPlus</td><td><code>boolean</code> | <code>ElementPlusResolverOptions</code></td><td>是否自动导入 <code>element-plus</code></td><td><code>true</code></td></tr><tr><td>autoImportTDesign</td><td><code>boolean</code> | <code>TDesignResolverOptions</code></td><td>是否自动导入 <code>tdesign</code></td><td><code>{ library: &#39;vue-next&#39; }</code></td></tr></tbody></table><h2 id="_3-常见问题" tabindex="-1">3. 常见问题 <a class="header-anchor" href="#_3-常见问题" aria-label="Permalink to &quot;3. 常见问题&quot;">​</a></h2><h3 id="_3-1-支持的-node-js-版本" tabindex="-1">3.1. 支持的 <code>node.js</code> 版本 <a class="header-anchor" href="#_3-1-支持的-node-js-版本" aria-label="Permalink to &quot;3.1. 支持的 \`node.js\` 版本&quot;">​</a></h3><p><code>node.js</code> 版本 &gt;= 16</p><h3 id="_3-2-环境变量如何注入" tabindex="-1">3.2. 环境变量如何注入 <a class="header-anchor" href="#_3-2-环境变量如何注入" aria-label="Permalink to &quot;3.2. 环境变量如何注入&quot;">​</a></h3><p>支持在环境变量文件中配置 <code>VUE_APP_DIR</code>，环境变量文件可以是 <code>.env</code>, <code>.env.local</code> 等</p><p>也支持不配置，此时应用入口是 <code>src/main.ts</code>，即非 <code>monorepo</code> 模式</p><h3 id="_3-3-如何进行打包产物分析" tabindex="-1">3.3. 如何进行打包产物分析 <a class="header-anchor" href="#_3-3-如何进行打包产物分析" aria-label="Permalink to &quot;3.3. 如何进行打包产物分析&quot;">​</a></h3><p>当 <code>process.env.VITE_VISUALIZER</code> 不为 <code>falsy</code> 时，本工具会使用 <code>rollup-plugin-visualizer</code> 插件，开发者可用来进行打包分析。</p><h3 id="_3-4-如何兼容的-vue-默认导出" tabindex="-1">3.4. 如何兼容的 Vue 默认导出 <a class="header-anchor" href="#_3-4-如何兼容的-vue-默认导出" aria-label="Permalink to &quot;3.4. 如何兼容的 Vue 默认导出&quot;">​</a></h3><p>内部使用了 <a href="./vite-plugin-export-default-in-vue.html">vite-plugin-export-default-in-vue</a>，来兼容 <code>Vue2.x</code> 时期的默认导入 Vue 对象。</p><p>业务无感知，无影响。</p><h3 id="_3-5-optimizedepsincludes-含义是什么" tabindex="-1">3.5. optimizeDepsIncludes 含义是什么 <a class="header-anchor" href="#_3-5-optimizedepsincludes-含义是什么" aria-label="Permalink to &quot;3.5. optimizeDepsIncludes 含义是什么&quot;">​</a></h3><p>对应 <a href="https://vite.dev/config/dep-optimization-options.html#optimizedeps-include" target="_blank" rel="noreferrer">optimizeDeps.include</a>，业务中常用到的有：</p><ul><li>md5</li><li>js-cookie</li><li>qs</li><li>axios</li></ul><h3 id="_3-6-vite-升级之后可能会出现的问题" tabindex="-1">3.6. Vite 升级之后可能会出现的问题 <a class="header-anchor" href="#_3-6-vite-升级之后可能会出现的问题" aria-label="Permalink to &quot;3.6. Vite 升级之后可能会出现的问题&quot;">​</a></h3><p>Vie 被曝出有<a href="https://github.com/vitejs/vite/security/advisories/GHSA-x574-m823-4x7w" target="_blank" rel="noreferrer">安全漏洞</a>，需升级到 <code>6.2.3+</code>。</p><p>升级之后可能对前端项目有几个影响。</p><ol><li><code>press-ui</code> 中某些变量无法识别</li></ol><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/4/own_mike_cf26d1ad18a538de18.png" width="800"><p>解决办法为，设置 <code>useCdn</code> 为 <code>false</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getViteBaseConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  useCdn: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ol start="2"><li><code>Promise.allSettled</code> 报错</li></ol><p>这是因为 Vite 使用了较高级的语法，<a href="https://github.com/vitejs/vite/pull/19805" target="_blank" rel="noreferrer">某些低版本浏览器不支持</a>。</p><p>解决办法为，手动 <code>polyfill</code>。或升级 Vite 最新版本。</p><h3 id="_3-7-业务中获取分支名等变量" tabindex="-1">3.7. 业务中获取分支名等变量 <a class="header-anchor" href="#_3-7-业务中获取分支名等变量" aria-label="Permalink to &quot;3.7. 业务中获取分支名等变量&quot;">​</a></h3><p>流水线会注入以下环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VITE_PUBLISH_BRANCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发布人</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VITE_PUBLISH_AUTHOR</span></span></code></pre></div><p>业务可以参考下面的方式获取：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CUR_BRANCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_PUBLISH_BRANCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;develop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#85E89D;--shiki-dark-font-weight:bold;">\\/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shareUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`https://foo/bar.\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CUR_BRANCH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\`</span></span></code></pre></div><h3 id="_3-8-windows-编译慢的问题" tabindex="-1">3.8. windows 编译慢的问题 <a class="header-anchor" href="#_3-8-windows-编译慢的问题" aria-label="Permalink to &quot;3.8. windows 编译慢的问题&quot;">​</a></h3><p>可以给 <code>getViteBaseConfig</code> 传递以下参数，禁用掉一些三方库的 <code>alias</code> 逻辑。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getViteBaseConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aliasForLibraryOptions: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pressPlusAlias: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pressUiAlias: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pmdAliasMap: {},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 按需添加</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  optimizeDepsIncludes: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;md5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;js-cookie&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>注意：</p><ul><li>需安装最新版本的 <code>press-ui</code>、<code>@plugin-light/project-config-vite</code> 等底层库</li><li><a href="https://github.com/vitejs/vite/blob/v6.3.1/packages/vite/CHANGELOG.md" target="_blank" rel="noreferrer">vite</a> 版本需 <code>&gt;=6.3.1+</code></li><li>三方库的 <code>javascript</code> 文件需自行处理条件编译等语法</li></ul><p>效果对比，之前：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/4/own_mike_5cHAyptEeFXmTShB.png" width="800"><p>之后：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/4/own_mike_Tbtn6PNK7P5Gxse6.png" width="800"><p>原理：</p><p>Vite 最新版本会编译三方库的非 <code>javascript</code> 文件，所以不再需要 <code>alias</code> 逻辑，<code>javascript</code> 文件需自行处理。</p><h3 id="_3-9-开发阶段报错503" tabindex="-1">3.9. 开发阶段报错503 <a class="header-anchor" href="#_3-9-开发阶段报错503" aria-label="Permalink to &quot;3.9. 开发阶段报错503&quot;">​</a></h3><p>本地开发时，如果遇到报错 503，如下图：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/7/own_mike_jYY2r6YZ4SaDFimY.png" width="600"><p>可以将 <code>mkcertOptions</code> 设为 <code>false</code>，即禁用掉 <a href="https://www.npmjs.com/package/vite-plugin-mkcert" target="_blank" rel="noreferrer">vite-plugin-mkcert</a> 插件。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getViteBaseConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mkcertOptions: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_3-10-console-日志去除" tabindex="-1">3.10. <code>console</code> 日志去除 <a class="header-anchor" href="#_3-10-console-日志去除" aria-label="Permalink to &quot;3.10. \`console\` 日志去除&quot;">​</a></h3><p>生产环境默认会去掉 <code>console.log</code> 日志和 <code>debugger</code> 关键字。如果想更改默认行为，可以通过覆盖 <code>esbuild</code> 选项实现。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getViteBaseConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode }),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 覆盖 esbuild 配置即可</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    esbuild: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="_4-更新日志" tabindex="-1">4. 更新日志 <a class="header-anchor" href="#_4-更新日志" aria-label="Permalink to &quot;4. 更新日志&quot;">​</a></h2><p><a href="./../changelog/project-config-vite.html">点此查看</a></p>`,61)]))}const g=i(d,[["render",n]]);export{k as __pageData,g as default};

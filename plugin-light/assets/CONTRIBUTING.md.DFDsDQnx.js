import{_ as a,c as i,o as e,ag as p}from"./chunks/framework.BUMipa88.js";const k=JSON.parse('{"title":"贡献指南","description":"","frontmatter":{},"headers":[],"relativePath":"CONTRIBUTING.md","filePath":"CONTRIBUTING.md","lastUpdated":1753670245000}'),t={name:"CONTRIBUTING.md"};function l(n,s,d,o,h,c){return e(),i("div",null,s[0]||(s[0]=[p(`<h1 id="贡献指南" tabindex="-1">贡献指南 <a class="header-anchor" href="#贡献指南" aria-label="Permalink to &quot;贡献指南&quot;">​</a></h1><p><code>plugin-light</code> 采用 <code>pnpm monorepo</code> 模式，灵感来自于 Vue3 和 Vite 项目。</p><p>开发前需对 <code>pnpm</code> 常用命令有基本了解。</p><h2 id="_1-打包" tabindex="-1">1. 打包 <a class="header-anchor" href="#_1-打包" aria-label="Permalink to &quot;1. 打包&quot;">​</a></h2><p>以 <code>project-config-vite</code> 为例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter=@plugin-light/project-config-vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>升级依赖</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在某个包中升级 一些依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter=@plugin-light/project-config-vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@plugin-light/*&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在所有包中只升级 某个依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./packages/*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@plugin-light/shared-vue2&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 除了某个包外，其他包升级依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\\!./packages/plugin-light-shared&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@plugin-light/shared&quot;</span></span></code></pre></div><h2 id="_2-文档" tabindex="-1">2. 文档 <a class="header-anchor" href="#_2-文档" aria-label="Permalink to &quot;2. 文档&quot;">​</a></h2><p>根据<code>jsdoc</code>生成文档：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:gen</span></span></code></pre></div><p>文档开发：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><p>文档打包：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div><p>文档部署：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:deploy</span></span></code></pre></div><h2 id="_3-monorepo" tabindex="-1">3. monorepo <a class="header-anchor" href="#_3-monorepo" aria-label="Permalink to &quot;3. monorepo&quot;">​</a></h2><h3 id="_3-1-shared" tabindex="-1">3.1. shared <a class="header-anchor" href="#_3-1-shared" aria-label="Permalink to &quot;3.1. shared&quot;">​</a></h3><p><code>shared</code> 为 Vue2 和 Vue3 公用的。</p><p><code>shared-vue2</code> 为 Vue2 独有的，可能会用到 <code>loader-utils</code>、<code>vue-template-compiler</code> 等库。</p><p>这样拆离是为了防止依赖版本冲突。</p><h3 id="_3-2-依赖关系" tabindex="-1">3.2. 依赖关系 <a class="header-anchor" href="#_3-2-依赖关系" aria-label="Permalink to &quot;3.2. 依赖关系&quot;">​</a></h3><p><code>loader</code>、<code>plugin</code> 之间不能互相依赖，<code>project-config</code> 之间也是。如果有公用部分，请抽离到 <code>shared</code> 中。</p><p><code>shared</code>、<code>loader</code>、<code>plugin</code>、<code>project-config</code> 依赖关系如下：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/5/own_mike_E675FCkwcJE8NPFK.png" width="400"><h3 id="_3-3-loader-导出" tabindex="-1">3.3. loader 导出 <a class="header-anchor" href="#_3-3-loader-导出" aria-label="Permalink to &quot;3.3. loader 导出&quot;">​</a></h3><p>每个 <code>loader</code> 有 3 个产物，外部可以使用。</p><ol><li>index.js</li><li>loader.js</li><li>loader.prod.js</li></ol><p><code>index.js</code> 是具名导出，包含 <code>LOADER</code>、<code>LOADER_PROD</code> 两个变量，分别对应 <code>loader.js</code>、<code>loader.prod.js</code> 的文件路径，并导出 <code>loader</code> 的 <code>types</code>。</p><p><code>loader.js</code> 和 <code>loader.prod.js</code> 分别是 <code>loader</code> 的非压缩版本和压缩版本。</p><h2 id="_4-工程化" tabindex="-1">4. 工程化 <a class="header-anchor" href="#_4-工程化" aria-label="Permalink to &quot;4. 工程化&quot;">​</a></h2><p><code>plugin-light</code> 提供的很多工具都是围绕工程化来的。</p><p>工程化的目标是通过自动化、标准化和最佳实践，解放开发者的双手来提高相关事务的实现效率，同时大幅降低因频繁人工干预而导致出现问题的可能性。</p>`,34)]))}const g=a(t,[["render",l]]);export{k as __pageData,g as default};

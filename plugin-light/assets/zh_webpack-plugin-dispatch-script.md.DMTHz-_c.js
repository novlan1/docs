import{_ as i,c as a,b as t,ag as n}from"./chunks/framework.CMjv3OHl.js";const o=JSON.parse('{"title":"脚本分发","description":"","frontmatter":{},"headers":[],"relativePath":"zh/webpack-plugin-dispatch-script.md","filePath":"zh/webpack-plugin-dispatch-script.md","lastUpdated":1756087650000}'),p={name:"zh/webpack-plugin-dispatch-script.md"};function e(l,s,h,d,r,c){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="脚本分发" tabindex="-1">脚本分发 <a class="header-anchor" href="#脚本分发" aria-label="Permalink to &quot;脚本分发&quot;">​</a></h1><p align="center"><img src="https://img.shields.io/npm/dw/@plugin-light/webpack-plugin-dispatch-script"><img src="https://img.shields.io/npm/unpacked-size/@plugin-light/webpack-plugin-dispatch-script"><img src="https://img.shields.io/npm/v/@plugin-light/webpack-plugin-dispatch-script"><img src="https://img.shields.io/npm/l/@plugin-light/webpack-plugin-dispatch-script"><img src="https://img.shields.io/github/last-commit/novlan1/plugin-light"><img src="https://img.shields.io/github/created-at/novlan1/plugin-light"></p><p>可以将只有分包使用的<code>javascript/typescript</code>，移动到相应的分包内。</p><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @plugin-light/webpack-plugin-dispatch-script</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>在 <code>vue.config.js</code> 中添加如下设置：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DispatchScriptPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@plugin-light/webpack-plugin-dispatch-script&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  configureWebpack: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    plugins: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DispatchScriptPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDispatchScriptOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 禁止移动的白名单列表</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  whiteList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 是否增加 common/vendor 的引用</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  addCommonVendorRequire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p><code>whiteList</code> 只能是子节点，如果设置了非子节点，那么它引用的所有模块也要一同列举，否则会存在<strong>父节点在主包、子节点在分包</strong>，引用失败。可以类比成，<strong>小兵随便挪地方，将军要走需要连他的手下一起挪走</strong>。</p><h2 id="日志" tabindex="-1">日志 <a class="header-anchor" href="#日志" aria-label="Permalink to &quot;日志&quot;">​</a></h2><p>脚本分发是比较复杂的插件，执行时会在 <code>log</code> 目录下输出一些日志，下面是日志文件的说明。</p><table tabindex="0"><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>dispatch-script.inner-deps-flatten</td><td>依赖信息，已处理</td></tr><tr><td>dispatch-script.inner-deps-raw</td><td>依赖信息</td></tr><tr><td>dispatch-script.inner-deps-to-dispatch-deep</td><td>将要派发的依赖</td></tr><tr><td>dispatch-script.inner-main-package-pages</td><td>主包页面</td></tr><tr><td>dispatch-script.raw-module-sources</td><td><code>module.resource</code> 列表</td></tr><tr><td>dispatch-script.raw-resource-resolve-data-list</td><td>原始引用关系</td></tr><tr><td>dispatch-script.result-handled-modules</td><td>插件处理的模块</td></tr></tbody></table><h2 id="文章" tabindex="-1">文章 <a class="header-anchor" href="#文章" aria-label="Permalink to &quot;文章&quot;">​</a></h2><p><a href="https://juejin.cn/post/7134873335301128229" target="_blank" rel="noreferrer">uni-app分包优化——脚本分发</a></p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><p>如果遇到下面这样的报错，可以尝试传入 <code>addCommonVendorRequire</code> 为 <code>true</code>。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TypeError: Cannot read property &#39;call&#39; of undefined</span></span>
<span class="line"><span>    at i (runtime.js?t=wechat&amp;s=1718772395771&amp;v=ca775494edc3431fdc68691e2e22246e:3)</span></span>
<span class="line"><span>    at Object.388b (act-goods-detail-barcode.js:1)</span></span>
<span class="line"><span>    at i (runtime.js?t=wechat&amp;s=1718772395771&amp;v=ca775494edc3431fdc68691e2e22246e:3)</span></span>
<span class="line"><span>    at Module.3591 (act-goods-detail-barcode.js:1)</span></span>
<span class="line"><span>    at i (runtime.js?t=wechat&amp;s=1718772395771&amp;v=ca775494edc3431fdc68691e2e22246e:3)</span></span></code></pre></div><h2 id="更新日志" tabindex="-1">更新日志 <a class="header-anchor" href="#更新日志" aria-label="Permalink to &quot;更新日志&quot;">​</a></h2><p><a href="./../changelog/webpack-plugin-dispatch-script.html">点此查看</a></p>`,21)]))}const g=i(p,[["render",e]]);export{o as __pageData,g as default};

import{_ as e,c as t,b as o,ag as l}from"./chunks/framework.CMjv3OHl.js";const _=JSON.parse('{"title":"批量发布","description":"","frontmatter":{},"headers":[],"relativePath":"work/60.batch-publish.md","filePath":"work/60.batch-publish.md","lastUpdated":1758424153000}'),i={name:"work/60.batch-publish.md"};function r(c,a,s,p,d,h){return o(),t("div",null,a[0]||(a[0]=[l('<div class="info custom-block"><p class="custom-block-title">作者</p><p>novlan1</p><p>2025.8.25</p></div><h1 id="批量发布" tabindex="-1">批量发布 <a class="header-anchor" href="#批量发布" aria-label="Permalink to &quot;批量发布&quot;">​</a></h1><h2 id="_1-介绍" tabindex="-1">1. 介绍 <a class="header-anchor" href="#_1-介绍" aria-label="Permalink to &quot;1. 介绍&quot;">​</a></h2><p>研发平台实现了 Web 项目的批量发布，之前需审核多次的场景现在只需审核一次。</p><h2 id="_2-如何操作" tabindex="-1">2. 如何操作 <a class="header-anchor" href="#_2-如何操作" aria-label="Permalink to &quot;2. 如何操作&quot;">​</a></h2><p>之前的发布界面，多选子工程即可。</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/8/own_mike_nbQddQGh2bCiaXr2.png" width="600"><h2 id="_3-实现方式" tabindex="-1">3. 实现方式 <a class="header-anchor" href="#_3-实现方式" aria-label="Permalink to &quot;3. 实现方式&quot;">​</a></h2><p>有两个方案：</p><ol><li>改造流水线，<code>VUE_APP_DIR</code> 支持传入多个子工程</li><li>研发平台后端包装批量发布，队列形式依次调用之前的发布方法</li></ol><p>方案一改造成本大，不只是 <code>VUE_APP_DIR</code> 这一个变量涉及的插件要改，还有构建产物相关的插件，比如 <code>sourceMap</code> 上传、CDN 上传、打包产物归档，还有非上云、上云不同的部署流程。</p><p>目前采用的是方案二，简单、灵活、易扩展。</p><p>采用方案二的话，如何存储多个待发布的子工程呢？这里直接放到了操作记录这个表里。</p><p>批量发布的操作记录是一条，还是多条呢？这里采用的是一条，每发布完一个子工程，就更新部分字段。</p><h2 id="_4-好处" tabindex="-1">4. 好处 <a class="header-anchor" href="#_4-好处" aria-label="Permalink to &quot;4. 好处&quot;">​</a></h2><p>实现批量发布后：</p><ul><li>发布效率高。只需审核一次。</li><li>开发者更专注。如果需发布10个子工程，每次发布需5分钟，开发者就需要在50分钟内切换10次上下文。支持批量发布后，只需要切换1次上下文。</li></ul>',17)]))}const u=e(i,[["render",r]]);export{_ as __pageData,u as default};

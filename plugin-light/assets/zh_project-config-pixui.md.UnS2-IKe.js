import{_ as s,c as a,b as t,ag as e}from"./chunks/framework.CMjv3OHl.js";const k=JSON.parse('{"title":"PixUI 项目基础配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/project-config-pixui.md","filePath":"zh/project-config-pixui.md","lastUpdated":1756141339000}'),n={name:"zh/project-config-pixui.md"};function p(l,i,h,d,o,r){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="pixui-项目基础配置" tabindex="-1">PixUI 项目基础配置 <a class="header-anchor" href="#pixui-项目基础配置" aria-label="Permalink to &quot;PixUI 项目基础配置&quot;">​</a></h1><p align="center"><img src="https://img.shields.io/npm/dw/@plugin-light/project-config-pixui"><img src="https://img.shields.io/npm/unpacked-size/@plugin-light/project-config-pixui"><img src="https://img.shields.io/npm/v/@plugin-light/project-config-pixui"><img src="https://img.shields.io/npm/l/@plugin-light/project-config-pixui"><img src="https://img.shields.io/github/last-commit/novlan1/plugin-light"><img src="https://img.shields.io/github/created-at/novlan1/plugin-light"></p><p>PixUI 项目的 <code>webpack</code> 配置。</p><h2 id="_1-作者" tabindex="-1">1. 作者 <a class="header-anchor" href="#_1-作者" aria-label="Permalink to &quot;1. 作者&quot;">​</a></h2><p><strong>novlan1</strong></p><h2 id="_2-如何使用" tabindex="-1">2. 如何使用 <a class="header-anchor" href="#_2-如何使用" aria-label="Permalink to &quot;2. 如何使用&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @plugin-light/project-config-pixui</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>在 <code>.pixiderc/webpack.js</code> 中添加如下设置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getPixuiWebpackConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@plugin-light/project-config-pixui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPixuiWebpackConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  appSettingDir: __dirname,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="_3-类型及默认参数" tabindex="-1">3. 类型及默认参数 <a class="header-anchor" href="#_3-类型及默认参数" aria-label="Permalink to &quot;3. 类型及默认参数&quot;">​</a></h2><h3 id="_3-1-参数" tabindex="-1">3.1. 参数 <a class="header-anchor" href="#_3-1-参数" aria-label="Permalink to &quot;3.1. 参数&quot;">​</a></h3><p><code>getPixuiWebpackConfig</code> 接收一个对象作为参数。</p><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th><p style="width:300px;">说明</p></th><th><p style="width:300px;">默认值</p></th></tr></thead><tbody><tr><td>appSettingDir</td><td><code>string</code></td><td><code>apps.json</code> 和 <code>appsettings.json</code> 文件所在目录</td><td>-</td></tr><tr><td>tsxLoaderExclude</td><td><code>regexp</code></td><td><code>tsx</code> 相关 <code>loader</code> 排除路径</td><td><code>/node_modules\\/(?!@tencent\\/pmd|@tencent\\/press)/</code></td></tr><tr><td>port</td><td><code>number</code></td><td>启动端口号</td><td><code>8080</code></td></tr><tr><td>useTailwind</td><td><code>boolean</code></td><td>是否使用 tailwindcss</td><td><code>false</code></td></tr></tbody></table><h3 id="_3-2-类名" tabindex="-1">3.2. 类名 <a class="header-anchor" href="#_3-2-类名" aria-label="Permalink to &quot;3.2. 类名&quot;">​</a></h3><p><code>less</code> 文件中的类名采用 <code>modules</code> 方式。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  loader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: require.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;css-loader&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      localIdentName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[name]_[local]__[hash:base64:6]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-3-关于-tailwindcss" tabindex="-1">3.3. 关于 tailwindcss <a class="header-anchor" href="#_3-3-关于-tailwindcss" aria-label="Permalink to &quot;3.3. 关于 tailwindcss&quot;">​</a></h3><p>PixUI 不支持 CSS 变量，<code>tailwindcss</code> 使用严重受限，不建议在 PixUI 中使用 <code>tailwindcss</code>。</p><h2 id="_4-更新日志" tabindex="-1">4. 更新日志 <a class="header-anchor" href="#_4-更新日志" aria-label="Permalink to &quot;4. 更新日志&quot;">​</a></h2><p><a href="./../changelog/project-config-pixui.html">点此查看</a></p>`,21)]))}const g=s(n,[["render",p]]);export{k as __pageData,g as default};

import{_ as t,c as i,b as a,ag as e}from"./chunks/framework.CMjv3OHl.js";const c=JSON.parse('{"title":"Uni App Vue 项目基础配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/project-config-uni-vue.md","filePath":"zh/project-config-uni-vue.md","lastUpdated":1754064529000}'),d={name:"zh/project-config-uni-vue.md"};function n(l,s,p,h,o,r){return a(),i("div",null,s[0]||(s[0]=[e(`<h1 id="uni-app-vue-项目基础配置" tabindex="-1">Uni App Vue 项目基础配置 <a class="header-anchor" href="#uni-app-vue-项目基础配置" aria-label="Permalink to &quot;Uni App Vue 项目基础配置&quot;">​</a></h1><p align="center"><img src="https://img.shields.io/npm/dw/@plugin-light/project-config-uni-vue"><img src="https://img.shields.io/npm/unpacked-size/@plugin-light/project-config-uni-vue"><img src="https://img.shields.io/npm/v/@plugin-light/project-config-uni-vue"><img src="https://img.shields.io/npm/l/@plugin-light/project-config-uni-vue"><img src="https://img.shields.io/github/last-commit/novlan1/plugin-light"><img src="https://img.shields.io/github/created-at/novlan1/plugin-light"></p><p><code>Vue.config.js</code> 配置，适用于 uni-app 项目。</p><h2 id="_1-如何使用" tabindex="-1">1. 如何使用 <a class="header-anchor" href="#_1-如何使用" aria-label="Permalink to &quot;1. 如何使用&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @plugin-light/project-config-uni-vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>在 <code>vue.config.js</code> 中添加如下设置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getUniVueConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@plugin-light/project-config-uni-vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;webpack-merge&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUniVueConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), {});</span></span></code></pre></div><h2 id="_2-类型说明" tabindex="-1">2. 类型说明 <a class="header-anchor" href="#_2-类型说明" aria-label="Permalink to &quot;2. 类型说明&quot;">​</a></h2><h3 id="_2-1-getunivueconfig-参数" tabindex="-1">2.1. getUniVueConfig 参数 <a class="header-anchor" href="#_2-1-getunivueconfig-参数" aria-label="Permalink to &quot;2.1. getUniVueConfig 参数&quot;">​</a></h3><p><a href="https://github.com/novlan1/plugin-light/blob/master/packages/project-config-uni-vue/src/types.ts" target="_blank" rel="noreferrer">完整类型定义</a>。</p><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>useTransformDynamicCompLoader</td><td><code>boolean</code></td><td>是否使用转换动态引入的 loader</td><td>-</td></tr><tr><td>useReplaceVueKeyLoader</td><td><code>boolean</code></td><td>是否使用替换 vue key loader</td><td>-</td></tr><tr><td>useSwipeComponentLoader</td><td><code>boolean</code></td><td>是否使用处理 swipe 组件的 loader</td><td>-</td></tr><tr><td>useInsertGlobalCompLoader</td><td><code>boolean</code></td><td>是否使用自动插入全局组件 loader</td><td>-</td></tr><tr><td>insertGlobalCompLoaderOptions</td><td><code>any</code></td><td>自动插入全局组件选项</td><td>-</td></tr><tr><td>useReplaceLibraryLoader</td><td><code>boolean</code></td><td>是否使用替换三方库 loader</td><td>-</td></tr><tr><td>replaceLibraryLoaderOptions</td><td><code>any</code></td><td>替换三方库选项</td><td>-</td></tr><tr><td>useReplaceTemplateTagLoader</td><td><code>boolean</code></td><td>是否使用替换模板标签</td><td>-</td></tr><tr><td>replaceTemplateTagLoaderOptions</td><td><code>any</code></td><td>替换模板标签选项</td><td>-</td></tr><tr><td>useVLazyLoader</td><td><code>boolean</code></td><td>是否使用 v-lazy loader</td><td>-</td></tr><tr><td>vLazyLoaderOptions</td><td><code>any</code></td><td>v-lazy loader 选项</td><td>-</td></tr><tr><td>useInsertPageMetaLoader</td><td><code>boolean</code></td><td>是否使用插入 page-meta loader</td><td>-</td></tr><tr><td>insertPageMetaLoaderOptions</td><td><code>IInsertGlobalCompOptions</code></td><td>插入 page-meta loader 选项</td><td>-</td></tr><tr><td>crossModuleStyleLoaderOptions</td><td><code>ICrossModuleStyleOptions</code></td><td>cross-module-style loader 选项</td><td>-</td></tr><tr><td>useCopyDirPlugin</td><td><code>boolean</code></td><td>是否使用 copy dir 插件</td><td>-</td></tr><tr><td>copyDirPluginOptions</td><td><code>ICopyDirOptions</code></td><td>copy dir 插件选项</td><td>-</td></tr><tr><td>useDispatchScriptPlugin</td><td><code>boolean</code></td><td>是否使用脚本派发插件</td><td>-</td></tr><tr><td>dispatchScriptPluginOptions</td><td><code>IDispatchScriptOptions</code></td><td>脚本派发插件选项</td><td>-</td></tr><tr><td>useDispatchVuePlugin</td><td><code>boolean</code></td><td>是否使用组件派发插件</td><td>-</td></tr><tr><td>dispatchVuePluginOptions</td><td><code>IDispatchVueOptions</code></td><td>组件派发插件选项</td><td>-</td></tr><tr><td>useXSS</td><td><code>boolean</code></td><td>是否使用 xss 方法包裹 v-html 内容，需提前注册全局方法</td><td>-</td></tr><tr><td>useAddPlaceHolderPlugin</td><td><code>boolean</code></td><td>是否使用 add placeholder 插件，为 true 时，也会使用动态引入组件的替换插件</td><td>-</td></tr><tr><td>remToRpxPluginMpOptions</td><td><code>IRemToRpxOptions</code></td><td>小程序下, rem to rpx 插件选项</td><td>-</td></tr><tr><td>genVersionWebPluginOptions</td><td><code>IGenVersionOptions</code></td><td>web 下，生成版本插件选项</td><td>-</td></tr><tr><td>adapterDirs</td><td><code>Array&lt;string&gt;</code></td><td>需移动的外层目录列表</td><td>-</td></tr><tr><td>transpileDependencies</td><td><code>Array&lt;string&gt;</code></td><td>待转换的三方依赖</td><td>-</td></tr><tr><td>lintOnSave</td><td><code>boolean</code></td><td>是否校验 eslint</td><td>-</td></tr><tr><td>useH5SplitChunks</td><td><code>boolean | Record&lt;string, any&gt;</code></td><td>是否使用 H5 的 splitChunks 配置，如果是对象类型，则直接传递给 config.optimization.splitChunks</td><td>-</td></tr><tr><td>useFixMiniCssPlugin</td><td><code>boolean</code></td><td>是否使用 fix-mini-css-plugin</td><td>-</td></tr><tr><td>aegisWebSdkExternal</td><td><code>boolean | string</code></td><td>aegis-web-sdk 是否使用外链，传入 string 会覆盖之前的链接</td><td><code>true</code></td></tr><tr><td>uniSimpleRouterExternal</td><td><code>boolean | string</code></td><td>uni-simple-router 是否使用外链，传入 string 会覆盖之前的链接</td><td><code>false</code></td></tr><tr><td>axiosExternal</td><td><code>boolean | string</code></td><td>axios 是否使用外链</td><td><code>false</code></td></tr><tr><td>vueLazyloadExternal</td><td><code>boolean | string</code></td><td>vue-lazy 是否使用外链</td><td><code>false</code></td></tr><tr><td>customPreload</td><td><code>boolean | ICustomPreloadOptions</code></td><td>是否使用自定义预加载</td><td><code>false</code></td></tr><tr><td>needSourceMap</td><td><code>boolean</code></td><td>是否需要 sourceMap，H5、生产环境、release 分支为 true，其他为 false</td><td>-</td></tr><tr><td>usePMDBusinessAlias</td><td><code>boolean</code></td><td>是否使用 pmd-business 为 alias</td><td><code>false</code></td></tr><tr><td>useWorkBoxPlugin</td><td><code>Record&lt;string, any&gt;</code></td><td>是否使用 work-box</td><td>-</td></tr><tr><td>saveBundleAnalyzeHtml</td><td><code>boolean | Record&lt;string, any&gt;</code></td><td>是否保存 bundle-analyze 结果到 html 中</td><td>-</td></tr><tr><td>useReplaceUniH5Plugin</td><td><code>IReplaceUniH5PluginOption</code></td><td>是否使用 replaceUniH5Plugin</td><td>-</td></tr><tr><td>useRemoveScopedLoader</td><td><code>any</code></td><td>是否使用 removeScoped loader</td><td>-</td></tr><tr><td>outputDirMode</td><td><code>string</code></td><td>打包产物目录</td><td><code>dist/\${VUE_APP_DIR}/static</code></td></tr></tbody></table><h3 id="_2-2-transpiledependencies" tabindex="-1">2.2. transpileDependencies <a class="header-anchor" href="#_2-2-transpiledependencies" aria-label="Permalink to &quot;2.2. transpileDependencies&quot;">​</a></h3><p><code>transpileDependencies</code> 默认值如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;press-ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;press-plus&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pmd-merchant-ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h3 id="_2-3-adapterdirs" tabindex="-1">2.3. adapterDirs <a class="header-anchor" href="#_2-3-adapterdirs" aria-label="Permalink to &quot;2.3. adapterDirs&quot;">​</a></h3><p><code>adapterDirs</code> 默认值如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;common&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;component&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;live-component&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;logic&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;local-logic&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;local-component&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;login&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;pages&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;static&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;node-modules&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="_3-常见问题" tabindex="-1">3. 常见问题 <a class="header-anchor" href="#_3-常见问题" aria-label="Permalink to &quot;3. 常见问题&quot;">​</a></h2><h3 id="_3-1-打包产物分析怎么做" tabindex="-1">3.1. 打包产物分析怎么做 <a class="header-anchor" href="#_3-1-打包产物分析怎么做" aria-label="Permalink to &quot;3.1. 打包产物分析怎么做&quot;">​</a></h3><p>当 <code>process.env.npm_config_report</code> 不为 <code>falsy</code> 时，本工具会使用 <code>webpack-bundle-analyzer</code> 插件，开发者可用来进行打包分析。</p><p>当传入 <code>saveBundleAnalyzeHtml</code> 不为 <code>falsy</code> 时，会在 <code>production</code> 模式下，保存打包分析产物到 <code>my-bundle-analyze.html</code> 文件中，可以在流水线中进行归档。</p><h3 id="_3-2-调试模式怎么打开" tabindex="-1">3.2. 调试模式怎么打开 <a class="header-anchor" href="#_3-2-调试模式怎么打开" aria-label="Permalink to &quot;3.2. 调试模式怎么打开&quot;">​</a></h3><p>当 <code>process.env.DEBUG_MODE</code> 不为 <code>falsy</code> 时，本工具会设置 <code>configureWebpack.optimization.minimize</code> 为 <code>false</code>，开发者可以用来进行产物的代码分析。</p><h3 id="_3-3-sourcemap-怎么配置" tabindex="-1">3.3. sourceMap 怎么配置 <a class="header-anchor" href="#_3-3-sourcemap-怎么配置" aria-label="Permalink to &quot;3.3. sourceMap 怎么配置&quot;">​</a></h3><p><code>options.needSourceMap</code> 的默认值为：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkH5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;production&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getGitCurBranch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;release&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>传入布尔值时，会取传入的值。</p><p>内部实现方式：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">configureWebpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(needSourceMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    devtool: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hidden-source-map&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此外，研发平台子项目中填有 <code>TAM_ID</code>（上报ID） 的话，会在发布正式环境时，将 <code>sourceMap</code> 文件后上传到 TAM 平台对应的项目下。</p><p>可以在查看错误文件的时候，选择对应的 <code>sourceMap</code>，注意不用带域名，直接输入文件名，比如 <code>main.1212.js.map</code>。</p><h3 id="_3-4-业务中获取分支名等变量" tabindex="-1">3.4. 业务中获取分支名等变量 <a class="header-anchor" href="#_3-4-业务中获取分支名等变量" aria-label="Permalink to &quot;3.4. 业务中获取分支名等变量&quot;">​</a></h3><p>流水线会注入以下环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VUE_APP_BRANCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发布人</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VUE_APP_AUTHOR</span></span></code></pre></div><p>业务可以参考下面的方式获取：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CUR_BRANCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BRANCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;develop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#85E89D;--shiki-dark-font-weight:bold;">\\/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shareUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`https://foo/bar.\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CUR_BRANCH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\`</span></span></code></pre></div><h2 id="_4-更新日志" tabindex="-1">4. 更新日志 <a class="header-anchor" href="#_4-更新日志" aria-label="Permalink to &quot;4. 更新日志&quot;">​</a></h2><p><a href="./../changelog/project-config-uni-vue.html">点此查看</a></p>`,39)]))}const g=t(d,[["render",n]]);export{c as __pageData,g as default};

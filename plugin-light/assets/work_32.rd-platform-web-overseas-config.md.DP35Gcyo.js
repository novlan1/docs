import{_ as i,c as a,b as n,ag as l}from"./chunks/framework.CMjv3OHl.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"work/32.rd-platform-web-overseas-config.md","filePath":"work/32.rd-platform-web-overseas-config.md","lastUpdated":1756088317000}'),e={name:"work/32.rd-platform-web-overseas-config.md"};function h(t,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-开始" tabindex="-1">1. 开始 <a class="header-anchor" href="#_1-开始" aria-label="Permalink to &quot;1. 开始&quot;">​</a></h2><p>研发平台上，出海项目和国内项目发布方式一样，部署方式基本一样，核心是更改BCS的模板集。</p><p>这里介绍研发平台关于出海项目的配置项、及注意点。</p><h2 id="_2-clb-管理" tabindex="-1">2. CLB 管理 <a class="header-anchor" href="#_2-clb-管理" aria-label="Permalink to &quot;2. CLB 管理&quot;">​</a></h2><p>首先要配置新域名，可<a href="https://iwiki.aow.com/p/1564466720" target="_blank" rel="noreferrer">参考这里</a>。简单来说，就是找运维要新域名的 clb 配置，填到研发平台的表单里，<a href="https://mobile.aow.com/rd-platform-web/#/management/clb" target="_blank" rel="noreferrer">在这里</a>。</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_bfdabdb2c460985642.png" width="500"><h2 id="_3-cos-及-cdn-管理" tabindex="-1">3. COS 及 CDN 管理 <a class="header-anchor" href="#_3-cos-及-cdn-管理" aria-label="Permalink to &quot;3. COS 及 CDN 管理&quot;">​</a></h2><p><a href="https://mobile.aow.com/rd-platform-web/#/management/cdn" target="_blank" rel="noreferrer">在这里</a>配置 COS 及 CDN。</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_a597d483e84c6fcd1e.png" width="500"><h2 id="_4-域名和集群管理" tabindex="-1">4. 域名和集群管理 <a class="header-anchor" href="#_4-域名和集群管理" aria-label="Permalink to &quot;4. 域名和集群管理&quot;">​</a></h2><p>然后填写域名和集群相关的配置，示例如下：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_646c9572b1a37d7c38.png" width="500"><ol><li>3种域名，测试、预发布、正式</li><li>集群ID，找运维要</li><li>nodePort，默认为0，自动暴露</li><li>是否为海外集群，出海项目选是</li><li>集群Code，集群项目英文名，比如，海外赛宝为 <code>hoksaibao</code></li><li>模板集名称，查看方式：蓝鲸容器管理平台 =&gt; 部署管理 =&gt; 模板集 =&gt; 模板集列表，找对应的前端模版集</li><li>模板集版本，查找方式同模板集名称</li></ol><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_3f92309e4f9a9aa3cc.png" width="500"><ol start="8"><li>分发镜像地址前缀，找运维要，用于蓝盾流水线推送镜像</li><li>分发镜像凭证名称，找运维要推送镜像的账号密钥，然后存入蓝盾凭证管理平台，其名称即为这里填入的名称</li></ol><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_534caf77a9cf8d9bb8.png" width="500"><ol start="10"><li>集群引入镜像前缀，用于生成 <code>deployment.yaml</code> 中的镜像地址。一般与分发镜像地址前缀相同，也可以不同。</li><li><code>Ingress</code> 中是否使用 service 名称，该选项控制 <code>Ingress.yaml</code> 的配置形式，选是时，使用的形式是 <code>backend.service.name</code>，选否时，使用的形式是 <code>backend.serviceName</code></li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (useIngressService) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 添加nginx默认路由</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backend: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      service: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`service-nginx-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceAll</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        port: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          number: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pathType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Prefix&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backend: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      serviceName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`service-nginx-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceAll</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      servicePort: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="12"><li><code>Ingress Api Version</code>，顾名思义，即为 <code>Ingress</code> 的版本，对应其 <code>apiVersion</code> 字段。</li><li>配置对应的 COS</li></ol><h2 id="_5-更新模板集" tabindex="-1">5. 更新模板集 <a class="header-anchor" href="#_5-更新模板集" aria-label="Permalink to &quot;5. 更新模板集&quot;">​</a></h2><p>&quot;BCS-YAML模板集&quot; 这个蓝盾插件用于更新 BCS 的模板集，需要注意下权限：</p><ul><li>流水线更新人与流水线启动者是否相同</li><li>流水线启动者是否有BCS该项目的运维权限</li></ul><p>研发平台额外提供了“远程调用”的方式，可传入远程触发的流水线id，和触发人。</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_29c132d33721993b78.png" width="500"><p>这里的流水线 id 可以从蓝盾流水线这里查看，触发人填有 BCS 运维权限的人。</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2024/1/own_mike_b10a8e595925be63da.png" width="700">`,26)]))}const c=i(e,[["render",h]]);export{o as __pageData,c as default};

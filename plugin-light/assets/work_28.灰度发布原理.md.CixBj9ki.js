import{_ as i,c as a,b as n,ag as l}from"./chunks/framework.CMjv3OHl.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"work/28.灰度发布原理.md","filePath":"work/28.灰度发布原理.md","lastUpdated":1754058176000}'),h={name:"work/28.灰度发布原理.md"};function k(t,s,p,e,E,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h3 id="_1-核心" tabindex="-1">1. 核心 <a class="header-anchor" href="#_1-核心" aria-label="Permalink to &quot;1. 核心&quot;">​</a></h3><p>核心原理利用了 <code>nginx</code> 的 <code>cookie</code> 分流，根据 <code>cookie</code> 值，修改 <code>root</code> 值进行灰度。</p><h3 id="_2-cookie-设计" tabindex="-1">2. cookie 设计 <a class="header-anchor" href="#_2-cookie-设计" aria-label="Permalink to &quot;2. cookie 设计&quot;">​</a></h3><p>一开始是将 <code>cookie</code> 设置放到 <code>nginx</code> 中，有几个问题：</p><ol><li>我们的业务是多项目共用一个 <code>nginx</code> 配置，分流是根据整个 <code>nginx</code> 的流程来的，单个工程没那么大流量，灰度不均。</li><li>灰度比例改变的时候，<code>nginx</code> 的 <code>cookie</code> 判断不够灵活，导致真实的灰度比例不符合预期。比如之前是 <code>online</code>，提升灰度比例的时候，要把之前 <code>online</code> 的按比例拆分重新进行赋值。<strong>多次访问的话，其实就会重复进入判断逻辑</strong>。降低灰度比例的时候，又要把之前 <code>gray</code> 的按比例拆分，也会重复进入判断逻辑。</li><li>由于第一点，流量是整个 <code>nginx</code> 的流程，<code>cookie</code> 的拆分逻辑如果很重，容易造成 <code>nginx</code> 负载过重。</li></ol><p>当前采用的方案是前端注入 <code>cookie</code>，有以下优点：</p><ol><li>修改灰度比例，无需重新发布</li><li><code>nginx</code> 不会负载过高</li><li>无需运维和后台配合</li></ol><p>缺点如下：</p><p>因为前端修改 <code>cookie</code> 的时候，<code>html</code> 已经返回了，所以：</p><ol><li>第一次没有 <code>cookie</code> 的用户，无法被灰度到，需要 <code>reload</code>。</li><li>灰度比例变更的时候，比如，一开始没灰度到的人，后面灰度到了，需要 <code>reload</code>。</li></ol><h3 id="_3-细节" tabindex="-1">3. 细节 <a class="header-anchor" href="#_3-细节" aria-label="Permalink to &quot;3. 细节&quot;">​</a></h3><p>灰度发布分类：</p><ol><li>从0到有，开启一个新的灰度发布，灰度比例大于 <code>0</code>，小于 <code>100</code></li><li>修改灰度比例。微信小程序中限制了只能提高，不能降低</li><li>全量，即灰度 <code>100%</code></li><li>撤销灰度，即灰度 <code>0%</code></li></ol><p>非灰度发布分类：</p><ol><li>发布（全量）</li><li>回滚</li></ol><p>灰度过程中有回滚怎么办？</p><ol><li>不再管灰度，直接用回滚目标版本覆盖</li><li>如需再次灰度，再次发布即可</li></ol><p>为什么需要统一的配置，以及如何统一？</p><ul><li>发布、灰度变更（撤销灰度、灰度变全量）、回滚这几个流水线应该用统一的构建镜像流程，同时灰度配置表应该用同一份，防止被覆盖。</li><li>前端用来更新 <code>cookie</code> 的配置，也应该和灰度发布中的配置用同一份，目前是应用的已建好的七彩石配置同步 CDN 的能力。</li></ul><p>什么时候需要产物构建？</p><ul><li>只有初次发布需要产物构建</li><li>全量、撤销灰度、回滚等，无需产物构建，只需镜像构建</li><li>修改灰度比例无需任何构建</li></ul><p>灰度配置表设计</p><ul><li>七彩石配置要区分域名、工程、子工程、分支，也就是分为4层，保证每个链接的灰度互不影响。示例如下：</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;pmd-mobile/match/gp-next&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;gp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;develop&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;onlineVersion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;grayVersion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b-9d893d090d49456096ebc983ac6df5c2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;grayPercent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">59</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;cookieId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FZyta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;updateTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1740040515741</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>为什么需要 <code>cookieId</code>，以及怎么用？</p><ul><li>每个灰度项目，都有一个唯一的 <code>cookieId</code>，用来在 <code>nginx</code> 中分流，并防止项目间互相影响。生成 <code>nginx</code> 配置的时候，会遍历七彩石配置，给每个项目生成唯一的 <code>cookieName</code>，然后用在每个 <code>location</code> 块中判断。</li></ul><p>下面的 <code>map</code> 逻辑不能放在 <code>server</code> 或 <code>location</code> 中，只能放到 <code>http</code> 中。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getGrayContentBefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(globalGrayPublishConfig)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">packageName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalGrayPublishConfig[packageName];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(info.grayVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info.grayPercent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info.cookieId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalGrayPublishConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  list.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">packageName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cookieName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCookieName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(packageName);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cookieId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalGrayPublishConfig[packageName] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pageCookieName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`gray_front_end_by_tip_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cookieId</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    map $http_cookie $\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cookieName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        default &quot;&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;~*\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pageCookieName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}=gray&quot; &quot;gray&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;~*\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pageCookieName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}=online&quot; &quot;online&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>location</code> 块中的判断逻辑：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getGrayContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fullSubProjectName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tryFilesContent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`try_files $uri $uri/ /\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fullSubProjectName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}$1/index.html =404;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globalGrayPublishConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(globalGrayPublishConfig).</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tryFilesContent;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCurrentProjectUseGray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fullSubProjectName);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tryFilesContent;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  list.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">packageName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cookieName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCookieName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(packageName);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    if ( $\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cookieName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} = &quot;gray&quot;) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      root /usr/share/nginx/html/gray-files;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tryFilesContent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>渐进升级？</p><ul><li>研发平台域名配置是否开启灰度发布</li></ul><p>灰度文件目录设计</p><ul><li>不应该在业务项目下建灰度子目录，而是整个镜像的灰度文件都在另一个大的目录</li><li>好处是，方便管理，以及防止用户误入灰度目录，比如 <code>http://xxx/gray-files</code> 即可直接访问灰度文件，甚至覆盖业务的页面，这是不可接受的</li></ul><p><code>nginx</code> 错误日志排查？ 错误有两种：</p><ol><li>第一种，无法启动 <code>nginx</code>（可理解为编译时错误），会在构建镜像的时候就抛出错误，k8s 根本不会生成新的节点，也就不会影响现有的业务。可在容器管理平台中查看日志。</li><li>第二种，可以启动，只在单独的 <code>location</code> 块错误（可理解为运行时错误），可进入容器内，<code>tail /var/log/nginx/error.log -f</code> 查看日志。</li></ol><h3 id="_4-流程图" tabindex="-1">4. 流程图 <a class="header-anchor" href="#_4-流程图" aria-label="Permalink to &quot;4. 流程图&quot;">​</a></h3><p>普通发布</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/8/own_mike_84s45H6WFpBJJpib.png" width="500"><p>灰度发布</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/8/own_mike_sYJyYDX4tccEcTRh.png" width="500"><p>灰度变全量</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/8/own_mike_E73FiM7SJwd5jbCE.png" width="500"><p>回滚</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2025/8/own_mike_ZHyYzPidPhTZt3mK.png" width="500"><h3 id="_5-参考" tabindex="-1">5. 参考 <a class="header-anchor" href="#_5-参考" aria-label="Permalink to &quot;5. 参考&quot;">​</a></h3><ol><li><a href="https://blog.csdn.net/qq_44472722/article/details/126960858" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_44472722/article/details/126960858</a></li><li><a href="https://blog.csdn.net/Matthewmq/article/details/141865830" target="_blank" rel="noreferrer">https://blog.csdn.net/Matthewmq/article/details/141865830</a></li><li><a href="https://www.cnblogs.com/hahaha111122222/p/13328778.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/hahaha111122222/p/13328778.html</a></li></ol>`,47)]))}const g=i(h,[["render",k]]);export{o as __pageData,g as default};

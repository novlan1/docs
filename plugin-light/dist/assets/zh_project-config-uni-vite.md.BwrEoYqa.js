import{_ as s,c as t,o as e,ag as a}from"./chunks/framework.BzTmxuB2.js";const k=JSON.parse('{"title":"Uni App Vite 项目基础配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/project-config-uni-vite.md","filePath":"zh/project-config-uni-vite.md","lastUpdated":1748855232000}'),d={name:"zh/project-config-uni-vite.md"};function n(l,i,p,o,h,r){return e(),t("div",null,i[0]||(i[0]=[a(`<h1 id="uni-app-vite-项目基础配置" tabindex="-1">Uni App Vite 项目基础配置 <a class="header-anchor" href="#uni-app-vite-项目基础配置" aria-label="Permalink to &quot;Uni App Vite 项目基础配置&quot;">​</a></h1><p align="center"><img src="https://img.shields.io/npm/dw/@plugin-light/project-config-uni-vite"><img src="https://img.shields.io/npm/unpacked-size/@plugin-light/project-config-uni-vite"><img src="https://img.shields.io/npm/v/@plugin-light/project-config-uni-vite"><img src="https://img.shields.io/npm/l/@plugin-light/project-config-uni-vite"><img src="https://img.shields.io/github/last-commit/novlan1/plugin-light"><img src="https://img.shields.io/github/created-at/novlan1/plugin-light"></p><p>封装 <code>vite.config.ts</code> 的基本配置，开箱即用。</p><h2 id="_1-如何使用" tabindex="-1">1. 如何使用 <a class="header-anchor" href="#_1-如何使用" aria-label="Permalink to &quot;1. 如何使用&quot;">​</a></h2><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @plugin-light/project-config-uni-vite</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><p>在 <code>vite.config.ts</code> 中添加如下设置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getUniVue3ViteConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@plugin-light/project-config-uni-vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getUniVue3ViteConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ mode });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="_2-参数" tabindex="-1">2. 参数 <a class="header-anchor" href="#_2-参数" aria-label="Permalink to &quot;2. 参数&quot;">​</a></h2><p><a href="https://github.com/novlan1/plugin-light/blob/master/packages/project-config-uni-vite/src/types.ts" target="_blank" rel="noreferrer">完整类型定义</a>。</p><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>mode</td><td><code>string</code></td><td>模式</td><td>-</td></tr><tr><td>uni</td><td><code>any</code></td><td>uni 插件</td><td>-</td></tr><tr><td>port</td><td><code>CommonServerOptions[&#39;port&#39;]</code></td><td>端口，传递给 <code>server.port</code></td><td><code>443</code></td></tr><tr><td>https</td><td><code>Server</code></td><td>https 配置，传递给 <code>server.https</code></td><td>-</td></tr><tr><td>host</td><td><code>CommonServerOptions[&#39;host&#39;]</code></td><td>host 配置，传递给 <code>server.host</code></td><td><code>true</code></td></tr><tr><td>prePlugins</td><td><code>Array&lt;Plugin&gt;</code></td><td>前置插件</td><td>-</td></tr><tr><td>postPlugins</td><td><code>Array&lt;Plugin&gt;</code></td><td>后置插件</td><td>-</td></tr><tr><td>optimizeDepsIncludes</td><td><code>Array&lt;string&gt;</code></td><td>对应 <code>optimizeDeps.include</code></td><td>-</td></tr><tr><td>removeVueDirectionOptions</td><td><code>IRemoveVueDirectionOptions</code></td><td>remove-vue-direction 插件参数</td><td>-</td></tr><tr><td>hmr</td><td><code>ServerOptions[&#39;hmr&#39;]</code></td><td>hmr 选项</td><td><code>{ timeout: 1000 * 60 * 5 }</code></td></tr><tr><td>warnList</td><td><code>ICrossGameStyleOptions[&#39;warnList&#39;]</code></td><td>语法警报列表，比如 <code>v-model</code>，<code>destroyed</code></td><td>-</td></tr><tr><td>transformWebTagOptions</td><td><code>boolean | TransformWebTagOptions</code></td><td>transform-web-tag postcss 插件参数</td><td>-</td></tr><tr><td>removeSelectorOptions</td><td><code>boolean | RemoveSelectorOptions</code></td><td>remove selector postcss 插件参数</td><td>-</td></tr><tr><td>uniTailwindOptions</td><td><code>boolean | UniTailwindPluginUserOptions</code></td><td>uniTailwind 插件参数</td><td>-</td></tr><tr><td>tailwindcssOptions</td><td><code>boolean | Parameters&lt;typeof tailwindcss&gt;[0]</code></td><td>tailwindcss postcss 插件参数</td><td>-</td></tr><tr><td>buildOptions</td><td><code>BuildOptions</code></td><td>构建选项</td><td>-</td></tr><tr><td>useChunkSplit</td><td><code>boolean</code></td><td>是否使用 chunk-split</td><td><code>false</code></td></tr><tr><td>useLegacy</td><td><code>boolean | LegacyOptions</code></td><td>是否使用 <code>@vitejs/plugin-legacy</code>，传递对象格式将作为插件参数</td><td><code>false</code></td></tr><tr><td>uniOptions</td><td><code>any</code></td><td>传递给 uni 插件的参数</td><td>-</td></tr><tr><td>useESBuildPlugin</td><td><code>boolean | ESBuildOptions</code></td><td>是否使用 <code>rollup-plugin-esbuild</code>，传递对象格式将作为插件参数</td><td>-</td></tr></tbody></table><h2 id="_3-常见问题" tabindex="-1">3. 常见问题 <a class="header-anchor" href="#_3-常见问题" aria-label="Permalink to &quot;3. 常见问题&quot;">​</a></h2><h3 id="_3-1-支持的-node-js-版本" tabindex="-1">3.1. 支持的 <code>node.js</code> 版本 <a class="header-anchor" href="#_3-1-支持的-node-js-版本" aria-label="Permalink to &quot;3.1. 支持的 \`node.js\` 版本&quot;">​</a></h3><p><code>node.js</code> 版本 &gt;= 16</p><h3 id="_3-2-环境变量如何注入" tabindex="-1">3.2. 环境变量如何注入 <a class="header-anchor" href="#_3-2-环境变量如何注入" aria-label="Permalink to &quot;3.2. 环境变量如何注入&quot;">​</a></h3><p>支持在环境变量文件中配置 <code>VUE_APP_DIR</code>，环境变量文件可以是 <code>.env</code>, <code>.env.local</code> 等，举例如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UNI_INPUT_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./src/project/guandan-match&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VUE_APP_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project/guandan-match</span></span></code></pre></div><h3 id="_3-3-对外脚本怎么用" tabindex="-1">3.3. 对外脚本怎么用 <a class="header-anchor" href="#_3-3-对外脚本怎么用" aria-label="Permalink to &quot;3.3. 对外脚本怎么用&quot;">​</a></h3><p>本插件导出了几个脚本，外部可以使用。</p><ol><li>修复 <code>uni-app</code> 中 <code>monorepo</code> 仓库下打包路径问题</li></ol><p>原理是修改了 <code>node_modules/@dcloudio/uni-cli-shared/dist/utils.js</code> 源码中的 <code>normalizeNodeModules</code> 方法，增加了下面这句：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[./]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>使用方式：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@plugin-light/project-config-uni-vite/public-script/uni/fix-uni-dir&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><ol start="2"><li>修复 <code>uni-app</code> 小程序下样式文件变化无法重新编译的问题</li></ol><p>小程序开发时，独立的 <code>sass</code> 文件改动后并不会重新编译，用一个全新的示例工程也不可以。看了下源码，<code>uni-app</code> 是用 <code>import(&#39;vite&#39;).then({build}=&gt;{})</code> 这种方式来启动的。</p><p>解决办法是利用 <code>gulp.watch</code>，监听 <code>./src/**/*.scss</code> 文件，然后修改下 <code>main.ts</code>，然后这样就能重新编译了。同时加上了 <code>debounce</code>。</p><p>使用方式：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@plugin-light/project-config-uni-vite/public-script/watch/watch-sass&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)();</span></span></code></pre></div><h3 id="_3-4-scss-警告说明是怎么做的" tabindex="-1">3.4. SCSS 警告说明是怎么做的 <a class="header-anchor" href="#_3-4-scss-警告说明是怎么做的" aria-label="Permalink to &quot;3.4. SCSS 警告说明是怎么做的&quot;">​</a></h3><p>配置中屏蔽了 <a href="https://sass-lang.com/documentation/breaking-changes/import/" target="_blank" rel="noreferrer">import</a>、<a href="https://sass-lang.com/documentation/breaking-changes/legacy-js-api/" target="_blank" rel="noreferrer">legacy-js-api</a>、<a href="https://sass-lang.com/documentation/breaking-changes/mixed-decls/" target="_blank" rel="noreferrer">mixed-decls</a> 的相关警告信息。</p><p>原因如下：</p><ol><li><p><code>uni-app</code> 会把 <code>uni.scss</code> 放到业务每个 <code>scss</code> 前面，所以 <code>@import</code> 改成 <code>@use</code> 后，会报错 <code>@use rules must be written before any other rules</code></p></li><li><p><code>legacy-js-api</code> 问题，也是 <code>uni-app</code> 中使用了 <code>node-sass</code> 的 <code>renderSync</code></p></li><li><p><code>mixed-decls</code> 问题，涉及到样式优先级问题，业务自己判断即可</p></li></ol><h3 id="_3-5-usechunksplit-含义是什么" tabindex="-1">3.5. useChunkSplit 含义是什么 <a class="header-anchor" href="#_3-5-usechunksplit-含义是什么" aria-label="Permalink to &quot;3.5. useChunkSplit 含义是什么&quot;">​</a></h3><p>设置 <code>useChunkSplit</code> 为 <code>true</code> 后，将会开启：</p><ol><li>将 <code>aegis-v2</code>、<code>axios</code> 作为外链</li><li>将一些库单独拆包 <ul><li><code>t-comm、press-ui、press-plus、 pmd-npm</code> =&gt; <code>pmd-pkg</code></li><li><code>@dcloudio/uni-h5</code> =&gt; <code>uni-h5</code></li></ul></li></ol><p>仅在 H5 下有效。</p><h3 id="_3-6-低版本浏览器兼容是怎么做的" tabindex="-1">3.6. 低版本浏览器兼容是怎么做的 <a class="header-anchor" href="#_3-6-低版本浏览器兼容是怎么做的" aria-label="Permalink to &quot;3.6. 低版本浏览器兼容是怎么做的&quot;">​</a></h3><p>使用方式为，设置 <code>useLegacy</code> 为 <code>true</code>。</p><p>原理，使用了 <a href="https://www.npmjs.com/package/@vitejs/plugin-legacy" target="_blank" rel="noreferrer">@vitejs/plugin-legacy</a> 这个三方库，以及<a href="./vite-plugin-legacy-polyfill.html">修复了它不支持 <code>CDN</code> 的问题</a>。</p><p>是否会影响 H5 在高版本浏览器的性能？基本不会，具体可自行搜索 <a href="https://www.npmjs.com/package/@vitejs/plugin-legacy" target="_blank" rel="noreferrer">@vitejs/plugin-legacy</a> 的原理。</p><p>如何判断当前项目是运行的的 <code>module</code> 产物，还是 <code>legacy</code> 产物？控制台打印 <code>window.__vite_is_modern_browser</code>，为 <code>true</code> 则表示运行的是 <code>module</code> 产物，否则为 <code>legacy</code> 产物。</p><h3 id="_3-7-业务中获取分支名等变量" tabindex="-1">3.7. 业务中获取分支名等变量 <a class="header-anchor" href="#_3-7-业务中获取分支名等变量" aria-label="Permalink to &quot;3.7. 业务中获取分支名等变量&quot;">​</a></h3><p>流水线会注入以下环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VITE_PUBLISH_BRANCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发布人</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VITE_PUBLISH_AUTHOR</span></span></code></pre></div><p>业务可以参考下面的方式获取：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CUR_BRANCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_PUBLISH_BRANCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;develop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#85E89D;--shiki-dark-font-weight:bold;">\\/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shareUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`https://foo/bar.\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CUR_BRANCH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\`</span></span></code></pre></div><h2 id="_4-更新日志" tabindex="-1">4. 更新日志 <a class="header-anchor" href="#_4-更新日志" aria-label="Permalink to &quot;4. 更新日志&quot;">​</a></h2><p><a href="./../changelog/project-config-uni-vite.html">点此查看</a></p>`,49)]))}const g=s(d,[["render",n]]);export{k as __pageData,g as default};

import{_ as t,c as i,o as s,ag as a}from"./chunks/framework.DYzZjXOQ.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/file.md","filePath":"zh/file.md","lastUpdated":1757433560000}'),n={name:"zh/file.md"};function l(p,e,o,h,r,d){return s(),i("div",null,e[0]||(e[0]=[a(`<h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getSafeFileExtension, getExtensionFromMime } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不支持 tree-shaking 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getSafeFileExtension, getExtensionFromMime} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/lib/file/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只支持 ESM 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getSafeFileExtension, getExtensionFromMime} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/es/file/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="getsafefileextension-file" tabindex="-1"><code>getSafeFileExtension(file)</code> <a class="header-anchor" href="#getsafefileextension-file" aria-label="Permalink to &quot;\`getSafeFileExtension(file)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>安全获取文件后缀名</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td><code>File</code></td><td><p>文件对象</p></td></tr></tbody></table><p><strong>返回</strong>: <code>string</code><br></p><p>文件后缀名（小写，不带点）</p><p><a name="getExtensionFromMime"></a></p><h3 id="getextensionfrommime-mimetype" tabindex="-1"><code>getExtensionFromMime(mimeType)</code> <a class="header-anchor" href="#getextensionfrommime-mimetype" aria-label="Permalink to &quot;\`getExtensionFromMime(mimeType)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>从MIME类型获取文件后缀</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>mimeType</td><td><code>string</code></td><td><p>MIME类型</p></td></tr></tbody></table><p><strong>返回</strong>: <code>string</code> | <code>null</code><br></p><p>文件后缀或null</p>`,15)]))}const m=t(n,[["render",l]]);export{g as __pageData,m as default};
